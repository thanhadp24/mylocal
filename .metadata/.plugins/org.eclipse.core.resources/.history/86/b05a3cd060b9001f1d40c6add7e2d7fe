package com.shopapp.controller;

import java.io.UnsupportedEncodingException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSenderImpl;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;

import com.shopapp.common.bean.EmailSettingBag;
import com.shopapp.common.entity.Customer;
import com.shopapp.service.CustomerService;
import com.shopapp.service.SettingService;
import com.shopapp.utils.MailUtil;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import jakarta.servlet.http.HttpServletRequest;

@Controller
public class CustomerController {
	
	@Autowired
	private CustomerService customerService;
	
	@Autowired
	private SettingService settingService;
	
	@GetMapping("/register")
	public String register(Model model) {
		model.addAttribute("countries", customerService.getAllCountries());
		model.addAttribute("customer", new Customer());
		model.addAttribute("pageTitle", "Registration Form");
		
		return "register/register_form";
	}
	
	@PostMapping("/create_customer")
	public String createCustomer(Customer customer, HttpServletRequest request, Model model) throws UnsupportedEncodingException, MessagingException {
		customerService.registerCustomer(customer);
		sendVerifyMail(request, customer);
		
		model.addAttribute("pageTitle", "Register");
		
		return "/register/register_success";
	}

	private void sendVerifyMail(HttpServletRequest request, Customer customer) throws UnsupportedEncodingException, MessagingException {
		EmailSettingBag emailSettings = settingService.getEmailSettings();
		JavaMailSenderImpl mailSenderImpl = MailUtil.mailSenderImpl(emailSettings);
		
		String toAddress = customer.getEmail();
		String subject = emailSettings.getCustomerVerifySubject();
		String content = emailSettings.getCustomerVerifyContent();
		
		MimeMessage message = mailSenderImpl.createMimeMessage();
		MimeMessageHelper helper = new MimeMessageHelper(message);
		
		helper.setFrom(emailSettings.getFromAddress(), emailSettings.getSenderName());
		helper.setTo(customer.getEmail());
		helper.setSubject(subject);
		
		content = content.replace("[[name]]", customer.getFullName());
		
		String urlVerify = MailUtil.getSiteURL(request) + "/verify?code=" + customer.getVerificationCode();
		
		content = content.replace("[[url]]", urlVerify);
		
		helper.setText(content, true);
		
		mailSenderImpl.send(message)l;
	}
}
