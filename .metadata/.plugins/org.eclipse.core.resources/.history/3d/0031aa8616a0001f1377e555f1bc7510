package com.shopapp.admin.controller;

import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.StringUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.shopapp.admin.exception.CategoryNotFoundException;
import com.shopapp.admin.service.CategoryService;
import com.shopapp.admin.utils.FileUploadUtil;
import com.shopapp.common.entity.Category;

@Controller
public class CategoryController {

	@Autowired
	private CategoryService categoryService;
	
	@GetMapping("/categories")
	public String viewCategories(Model model) {
		model.addAttribute("categories", categoryService.getAll());
		return "categories/categories";
	}
	
	@GetMapping("/categories/new")
	public String categoryForm(Model model) {
		List<Category> categories = categoryService.getCategoryUsedInForm();
		
		model.addAttribute("category", new Category());
		model.addAttribute("categories", categories);
		model.addAttribute("pageTitle", "Create new category");
		return "categories/category_form";
	}
	
	@PostMapping("/categories/save")
	public String saveCategory(RedirectAttributes redirectAttributes, 
			Category category, @RequestParam("fileImage") MultipartFile multipartFile) throws IOException {
		
		String fileName = StringUtils.cleanPath(multipartFile.getOriginalFilename());
		category.setImage(fileName);
		
		Category savedCategory = categoryService.save(category);
		
		String path = "../category-images/" + savedCategory.getId();
		
		FileUploadUtil.cleanDir(path);
		FileUploadUtil.saveFile(path, fileName, multipartFile);
		
		redirectAttributes.addFlashAttribute("message", "The category name " + category.getName() + " has been saved successfully");
		
		return "redirect:/categories";
	}
	
	@GetMapping("/categories/edit/{id}")
	public String editCategory(@PathVariable("id") Integer id,
			Model model, RedirectAttributes ra) {
		
		try {
			model.addAttribute("category", categoryService.get(id));
			model.addAttribute("categories", categoryService.getCategoryUsedInForm());
			model.addAttribute("pageTitle", "Edit category (ID: " + id + ")");
			
			return "categories/category_form";
		} catch (CategoryNotFoundException e) {
			model.addAttribute("message", e.getMessage());
			return "redirect:/categories";
		}
	}
	
}
